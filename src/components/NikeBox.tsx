/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 scene.gltf -t -o NikeBox.tsx 
Author: samplemem (https://sketchfab.com/samplemem)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/nike-shoe-box-6eb4190c3ca847c8853226c90d1ea37a
Title: Nike Shoe Box
*/

import * as THREE from "three";
import React, { useEffect } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { NikeAirJordan } from "./shoes/NikeAirJordan";
import gsap from "gsap";

type ActionName = "CINEMA_4D_Main";

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

type GLTFResult = GLTF & {
  nodes: {
    Plane_Plane_002_Material_001_TOP_0: THREE.Mesh;
    Plane_Plane_002_carton_BOTTOM_0: THREE.Mesh;
  };
  materials: {
    material: THREE.MeshStandardMaterial;
    BOTTOM: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

interface NikeBoxProps {
  triggerAnimation?: boolean;
  shoeRef?: React.RefObject<THREE.Group<THREE.Object3DEventMap>>;
}

export function NikeBox(props: JSX.IntrinsicElements["group"] & NikeBoxProps) {
  const group = React.useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/anim-shoe-box/scene.gltf"
  ) as GLTFResult;
  const { actions } = useAnimations(animations, group);
  const { triggerAnimation, shoeRef } = props;

  const playShoeAnimation = (
    shoe: THREE.Group<THREE.Object3DEventMap>
  ): void => {
    const shoeTimeline = gsap.timeline({
      repeat: 0,
      ease: "power1.inOut",
      delay: 1,
    });
    shoeTimeline.to(shoe.position, {
      y: 0.2,
      z:1,
      duration: 1,
      // yoyo: true,
    });
    shoeTimeline.to(
      shoe.rotation,
      { y: (Math.PI / 2) * 5, duration: 2 },
      "-=1"
    );
    shoeTimeline.to(
      shoe.scale,
      {
        duration: 1,
        x: 1.5,
        y: 1.5,
        z: 1.5,
      },
      "-=2"
    );
  };

  useEffect(() => {
    if (triggerAnimation) {
      const action = actions["CINEMA_4D_Main"];
      if (action && shoeRef?.current) {
        action.setLoop(THREE.LoopOnce, 0);
        action.clampWhenFinished = true; // Stop at the last frame when finished
        action.play();

        shoeRef.current.visible = true;

        playShoeAnimation(shoeRef.current);
      }
    }
  }, [triggerAnimation]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group
          name="Sketchfab_model"
          rotation={[-Math.PI / 2, 0, 0]}
          scale={1.521}
        >
          <group name="BOX_nikefbx" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
            <group name="Object_2">
              <group name="RootNode">
                <group name="BOX" position={[0, 0.05, 0]}>
                  <group
                    name="Plane_Plane_002_Material_001"
                    position={[0, 11.551, -9.859]}
                  >
                    <mesh
                      name="Plane_Plane_002_Material_001_TOP_0"
                      geometry={
                        nodes.Plane_Plane_002_Material_001_TOP_0.geometry
                      }
                      material={materials.material}
                    />
                  </group>
                  <group name="Plane_Plane_002_carton" position={[0, 0.05, 0]}>
                    <mesh
                      name="Plane_Plane_002_carton_BOTTOM_0"
                      geometry={nodes.Plane_Plane_002_carton_BOTTOM_0.geometry}
                      material={materials.BOTTOM}
                    />
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/anim-show-box/scene.gltf");

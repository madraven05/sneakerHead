/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 scene.gltf -t -o court.tsx 
Author: Klieg3D (https://sketchfab.com/Klieg3D)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/basketball-court-d2ea5bc76e094f1a9e6aa15891bd6885
Title: Basketball Court
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useHelper } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useFrame } from "@react-three/fiber";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
    Object_6: THREE.Mesh;
    Object_7: THREE.Mesh;
    Object_8: THREE.Mesh;
    Object_9: THREE.Mesh;
    Object_10: THREE.Mesh;
    Object_11: THREE.Mesh;
    Object_12: THREE.Mesh;
    Object_13: THREE.Mesh;
    Object_14: THREE.Mesh;
    Object_15: THREE.Mesh;
    Object_17: THREE.Mesh;
    Object_19: THREE.Mesh;
    Object_21: THREE.Mesh;
    Object_22: THREE.Mesh;
    Object_24: THREE.Mesh;
    Object_26: THREE.Mesh;
    Object_27: THREE.Mesh;
    Object_28: THREE.Mesh;
    Object_29: THREE.Mesh;
    Object_31: THREE.Mesh;
    Object_33: THREE.Mesh;
  };
  materials: {
    Outer_Floor: THREE.MeshStandardMaterial;
    Inner_Floor: THREE.MeshStandardMaterial;
    Wall: THREE.MeshStandardMaterial;
    Support_Pillars: THREE.MeshStandardMaterial;
    Mesh: THREE.MeshStandardMaterial;
    ["Material.002"]: THREE.MeshStandardMaterial;
    Light_Pillars: THREE.MeshStandardMaterial;
    Bench_Top: THREE.MeshStandardMaterial;
    Bench_Bottom: THREE.MeshStandardMaterial;
    Dust_Bin: THREE.MeshStandardMaterial;
    Basketball_Stand: THREE.MeshStandardMaterial;
    White: THREE.MeshStandardMaterial;
    material: THREE.MeshStandardMaterial;
  };
  animations: GLTFAction[];
};

export function Court(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/court/scene.gltf") as GLTFResult;
  // const lightPillerRef = useRef<THREE.SpotLight>();
  const spotlightRef = useRef<THREE.SpotLight>(null);
  const targetPosition = new THREE.Object3D();
  // Optional helper to visualize the spotlight for debugging
  useHelper(spotlightRef as React.MutableRefObject<THREE.SpotLight>, THREE.SpotLightHelper)

  useFrame(() => {
    if(spotlightRef.current) {
      targetPosition.position.set(0.3,-1,0)
      spotlightRef.current.target = targetPosition;
    }
  })

  return (
    <group receiveShadow castShadow {...props} dispose={null}>
      <group position={[0, 0.1, 0]}>
        <mesh
          geometry={nodes.Object_4.geometry}
          material={materials.Outer_Floor}
        />
        <mesh
          geometry={nodes.Object_5.geometry}
          material={materials.Inner_Floor}
        />
        <mesh geometry={nodes.Object_6.geometry} material={materials.Wall} />
        <mesh
          geometry={nodes.Object_7.geometry}
          material={materials.Support_Pillars}
        />
        <mesh geometry={nodes.Object_8.geometry} material={materials.Mesh} />
        <mesh geometry={nodes.Object_9.geometry} material={materials.Mesh} />
        <mesh geometry={nodes.Object_10.geometry} material={materials.Mesh} />
        <mesh geometry={nodes.Object_11.geometry} material={materials.Mesh} />
        <mesh geometry={nodes.Object_12.geometry} material={materials.Mesh} />
        <mesh geometry={nodes.Object_13.geometry} material={materials.Mesh} />
        <mesh geometry={nodes.Object_14.geometry} material={materials.Mesh} />
        <mesh geometry={nodes.Object_15.geometry} material={materials.Mesh} />
      </group>
      <group position={[2.113, 0.313, -0.794]}>
        <mesh
          geometry={nodes.Object_21.geometry}
          material={materials.Bench_Top}
        />
        <mesh
          geometry={nodes.Object_22.geometry}
          material={materials.Bench_Bottom}
        />
      </group>
      <group position={[-2.24, 0.781, 0]}>
        <mesh
          geometry={nodes.Object_26.geometry}
          material={materials.Basketball_Stand}
        />
        <mesh geometry={nodes.Object_27.geometry} material={materials.White} />
        <mesh
          geometry={nodes.Object_28.geometry}
          material={materials.material}
        />
        <mesh
          geometry={nodes.Object_29.geometry}
          material={materials.Bench_Bottom}
        />
      </group>
      <mesh
        receiveShadow
        geometry={nodes.Object_17.geometry}
        material={materials["Material.002"]}
        position={[0, 0.135, 0]}
      />
      <mesh
        // ref={lightPillerRef}
        geometry={nodes.Object_19.geometry}
        material={materials.Light_Pillars}
        position={[-0.005, 0.1, -0.078]}
      >
        <spotLight ref={spotlightRef} distance={2} position={[1.8,1.5,1.5]} angle={0.5}/>
      </mesh>
      <mesh
        geometry={nodes.Object_24.geometry}
        material={materials.Dust_Bin}
        position={[2.113, 0.313, -0.794]}
      />
      <mesh
        geometry={nodes.Object_31.geometry}
        material={materials.Mesh}
        position={[0, 0.1, 0]}
      />
      <mesh
        geometry={nodes.Object_33.geometry}
        material={materials.White}
        position={[-2.24, 0.781, 0]}
      />
    </group>
  );
}

useGLTF.preload("/court/scene.gltf");

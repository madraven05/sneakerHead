/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 scene.gltf -t -o NikeCharge.tsx 
Author: wolkoed (https://sketchfab.com/wolkoed)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/nike-sb-charge-cnvs-46261bacdcbe4f2381edd5d1afc8df91
Title: Nike SB Charge CNVS
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    NikeSB_Charge002_NikeSB_Charge002_0: THREE.Mesh
    NikeSB_Charge002_NikeSB_Charge002_0_1: THREE.Mesh
    NikeSB_Charge002_NikeSB_Charge002_0_2: THREE.Mesh
    NikeSB_Charge002_NikeSB_Charge002_0_3: THREE.Mesh
  }
  materials: {
    ['NikeSB_Charge.002']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function NikeCharge(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/nike-charge/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={1.111}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <mesh geometry={nodes.NikeSB_Charge002_NikeSB_Charge002_0.geometry} material={materials['NikeSB_Charge.002']} />
          <mesh geometry={nodes.NikeSB_Charge002_NikeSB_Charge002_0_1.geometry} material={materials['NikeSB_Charge.002']} />
          <mesh geometry={nodes.NikeSB_Charge002_NikeSB_Charge002_0_2.geometry} material={materials['NikeSB_Charge.002']} />
          <mesh geometry={nodes.NikeSB_Charge002_NikeSB_Charge002_0_3.geometry} material={materials['NikeSB_Charge.002']} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/nike-charge/scene.gltf')
